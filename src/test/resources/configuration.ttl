@prefix : <urn:example:plugin-demo/> .
@prefix fcage: <https://w3id.org/fcage/> .
@prefix deer: <https://w3id.org/deer/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix geos: <http://www.opengis.net/ont/geosparql#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .

:reader                #will be replaced with the output of ontology operator
  a deer:SparqlModelReader ;
  deer:useSparqlDescribeOf <http://dbpedia.org/resource/Khipro> ;
  deer:fromEndpoint <http://dbpedia.org/sparql> ;
  fcage:hasOutput :matcher ;
.

:matcher
 a deer:IntanceMatchingOperator ;
 deer:coverage "0.70" ;			   #Coverage of a Property     #propteryCount/TotalInstanceCount
 deer:maxLimit "10";           #Maximum number of Properties
 deer:test "true";
 fcage:hasInput :reader ;
.
 
 
:consolidation
 a deer:ConsolidationOperator ;
 deer:sameAs "http://www.w3.org/2002/07/owl#sameAs"; # predicate that symbolizes equality
 deer:entityName "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"; #predicate describes the given entitys
 deer:sourceName "https://w3id.org/deer/datasetSource"; # predicate of the data Source
 deer:targetName "https://w3id.org/deer/datasetTarget"; # predicate of the data Target
 deer:addTarget "true"; # integrate unmatched from the target dataset
 deer:namespaceForIntegration "https://w3id.org/deer/nameprefix/"; # prefix for integration of unmatched from target to source
 deer:fusionStrategy "standard"; # standard, precise, expertise, [...]
 deer:outputVariant "ttl"; # output file
 deer:expertise "source"; # source or target
 fcage:hasInput :matcher ;
.
  

:writer
  a deer:StdOutModelWriter ;
  fcage:hasInput :consolidation ;
.